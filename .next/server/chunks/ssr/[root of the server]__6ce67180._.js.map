{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/agsolano/Documents/alcozone/src/services/api.ts"],"sourcesContent":["import axios from \"axios\";\nconst api = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_URL,\n  timeout: 5000,\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    config.headers.Accept = \"application/json\";\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,OAAO;IACP,SAAS;AACX;AAEA,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,CAAC;IACC,MAAM,QAAQ,aAAa,OAAO,CAAC;IACnC,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;IAClD;IACA,OAAO,OAAO,CAAC,MAAM,GAAG;IACxB,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAC3B,CAAC,WAAa,UACd,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;uCAGa","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///Users/agsolano/Documents/alcozone/src/app/home/page.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport api from \"@/services/api\";\n\n// ðŸš¨ NOTE TO PAGE OWNER:\n// This page is currently used to validate Firebase login and token presence.\n// If the token is invalid or missing, the user is redirected to /auth/login.\n// Right now it shows a placeholder message (\"Login funcionando yayyy!!\").\n// Please replace this content with the actual dashboard or landing content.\n// This validation ensures only authenticated users can access this route.\n\n\nconst home = () => {\n  const router = useRouter();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const validateToken = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        router.push(\"/auth/login\");\n        return;\n      }\n\n      try {\n        await api.get(\"/auth/login\"); \n        setLoading(false);\n      } catch (error) {\n        localStorage.removeItem(\"token\");\n        router.push(\"/auth/login\");\n      }\n    };\n\n    validateToken();\n  }, [router]);\n\n  if (loading) return <p>Cargando...</p>;\n\n  return (\n    <div className=\"p-10\">\n      <h1 className=\"text-3xl font-bold\">Login funcionando yayyy!!</h1>\n    </div>\n  );\n};\n\nexport default home;"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAKA,yBAAyB;AACzB,6EAA6E;AAC7E,6EAA6E;AAC7E,0EAA0E;AAC1E,4EAA4E;AAC5E,0EAA0E;AAG1E,MAAM,OAAO;IACX,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,gBAAgB;YACpB,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,IAAI,CAAC,OAAO;gBACV,OAAO,IAAI,CAAC;gBACZ;YACF;YAEA,IAAI;gBACF,MAAM,sHAAA,CAAA,UAAG,CAAC,GAAG,CAAC;gBACd,WAAW;YACb,EAAE,OAAO,OAAO;gBACd,aAAa,UAAU,CAAC;gBACxB,OAAO,IAAI,CAAC;YACd;QACF;QAEA;IACF,GAAG;QAAC;KAAO;IAEX,IAAI,SAAS,qBAAO,8OAAC;kBAAE;;;;;;IAEvB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAG,WAAU;sBAAqB;;;;;;;;;;;AAGzC;uCAEe","debugId":null}}]
}